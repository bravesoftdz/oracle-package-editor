{****************************************************************
  $Id: uProtect.pas,v 1.1 2006-03-07 05:35:48 dale Exp $
****************************************************************}
unit uProtect;

interface

uses SysUtils, Windows, Classes;

   // —тартует/прибивает поток, загружающий GUID-ключи
  procedure StartReadingGUIDs;
  procedure StopReadingGUIDs;

const
  IGUIDThreadFinishedTimerID = 145272;
  IGUIDStartDate: TGUID      = '{0E36053E-B071-4602-AA87-E79D5FE500DB}'; // GUID значени€, хран€щего дату установки

  aGUIDs: Array[0..255] of TGUID = (
    '{4657278A-411B-11D2-839A-00C04FD918D0}',
    '{CDBD8D00-C193-11D0-BD4E-00A0C911CE86}',
    '{76F363F2-7E9F-4ED7-A6A7-EE30351B6628}',
    '{03022430-ABC4-11D0-BDE2-00AA001A1953}',
    '{D8A92FBA-B342-11D3-B1FB-00C04F61319D}',
    '{49FC0185-4B32-11D1-A40E-00600831F336}',
    '{3050F406-98B5-11CF-BB82-00AA00BDCE0B}',
    '{2C5B6502-5731-11D3-B53D-00902771A435}',
    '{8467B76D-ADF7-49F2-A14C-9154E2C236B3}',
    '{62AE1F9A-126A-11D0-A14B-0800361B1103}',
    '{CB5E5A20-F586-B9F8-5185-DEFE80691E17}',
    '{4EE17959-931E-49E4-A2C6-977ECF3628F3}',
    '{AB40A5C1-804B-40BD-9DFE-A640691C6956}',
    '{256FDDA0-94D1-11D4-9064-00C04F78ACF9}',
    '{C73CB50A-C50E-4FC7-989F-CF0544F35167}',
    '{55190940-CDE3-4215-A378-1B6CB340E513}',
    '{875CB1A1-0F29-45DE-A1AE-CFB4950D0B78}',
    '{83AD9E07-A14C-11D3-9A9A-00C04F687E87}',
    '{D7A7D7C3-D47F-11D0-89D3-00A0C90833E6}',
    '{124BFE4A-95D4-40E1-99E6-22376E36D24B}',
    '{4F60D6EC-CDDA-11D3-AE6B-00C04F613171}',
    '{FB74F625-7D25-4455-B840-7B870B5B9322}',
    '{6BC0989D-0CE6-11D1-BAAE-00C04FC2E20D}',
    '{6CFAD761-735D-4AA5-8AFC-AF91A7D61EBA}',
    '{3D09C1CA-2BCC-40B7-B9BB-3F3EC143A87B}',
    '{50B6327F-AFD1-11D2-9CB9-0000F87A369E}',
    '{8FA0D5AA-DEDF-11D0-9A61-00C04FB68BF7}',
    '{A28D553A-A703-11D0-9CEC-00C04FC9BCC4}',
    '{0C9FD8E4-5DF3-11D3-ADFC-0004AC96AAB2}',
    '{01C3D4A8-A701-11D1-8324-00A024CAA292}',
    '{5D1CB715-1C4B-11D4-BED5-005004B1F42F}',
    '{9C5754F7-ADF5-4D82-B181-0F8FC5EA882B}',
    '{F5078F33-C551-11D3-89B9-0000F81FE221}',
    '{4205AB55-8E61-4832-8A89-A1EC6A81DFC1}',
    '{5817C4DD-72E5-4246-A577-E0CB24B3A0B4}',
    '{00000305-0000-0000-C000-000000000046}',
    '{596B0255-F403-11D3-B768-00105A6753FE}',
    '{00020801-0000-0000-C000-000000000046}',
    '{B220F7BF-8E37-11D4-BD28-0004AC96D905}',
    '{25C467EA-E915-4EB7-9AE6-343BA3016E21}',
    '{7478EF69-8C46-11D1-8D99-00A0C913CAD4}',
    '{7478EF65-8C46-11D1-8D99-00A0C913CAD4}',
    '{33D9A761-90C8-11D0-BD43-00A0C911CE86}',
    '{C750FA20-379D-11D3-BCD7-0050048EBC8D}',
    '{56D7C520-5E0B-11D3-8DC8-00104B06462E}',
    '{79EAC9E5-BAF9-11CE-8C82-00AA004BA90B}',
    '{B0B71247-4080-11D1-A3AC-00C04FB950DC}',
    '{82D353DF-90BD-4382-8BC2-3F6192B76E34}',
    '{9AED384E-CE8B-11D1-8B05-00600806D9B6}',
    '{D9D5678A-76CE-4804-AAFC-1DA2502DB0BC}',
    '{E2AC0C6A-7079-11D3-8D01-0050048383A8}',
    '{2D360201-FFF5-11D1-8D03-00A0C959BC0A}',
    '{2FC765C8-AE47-11D1-9975-00805F8AC6B3}',
    '{BAE1A617-2F4F-11CF-A9F7-080009B1D3DB}',
    '{EBA96B18-2168-11D3-898C-00E02C074F6B}',
    '{3A410F21-553F-11D1-8E5E-00A0C92C9D5D}',
    '{3F276EB4-70EE-11D1-8A0F-00C04FB93753}',
    '{4ADE9711-92C5-4D92-8A04-DC61143673A4}',
    '{6D4A3650-628D-11D2-AE0F-006097B01411}',
    '{461A1BCD-09BA-40CC-B3F9-82CE760E7C40}',
    '{027713F2-5FA8-11D2-875B-00A0C93C09B3}',
    '{756D55AD-854F-46E4-92B3-28FC5BA1B685}',
    '{F3CA5665-C5DA-11CF-8F28-00AA0060FD48}',
    '{365624F6-B123-492F-8D37-217A419FF93B}',
    '{3FC8E6E4-53FF-11D2-BB7D-00C04FA30080}',
    '{8A3F59E1-4994-11D1-A40D-00600831F336}',
    '{8F0D99C1-14DB-48B0-8674-12996627496E}',
    '{51A5FC61-13DF-11CF-BE51-0020AFE55F5C}',
    '{EF636390-F343-11D0-9477-00C04FD36226}',
    '{3EFB1800-C2A1-11CF-960C-0080C7C2BA87}',
    '{BDEADE43-C265-11D0-BCED-00A0C90AB50F}',
    '{EA231B91-099E-4D02-9EE7-73976D6A085F}',
    '{963AB779-16A1-477C-A36D-CB5E711938F7}',
    '{C27CCE40-8596-11D1-B16A-00C0F0283628}',
    '{F07F3920-7B8C-11CF-9BE8-00AA004B9986}',
    '{8B76757A-D926-4D30-AA69-25FB62C81D5B}',
    '{7084B230-5212-11D0-A1E5-0800361A1803}',
    '{CDBEC9C0-7A68-11D1-88F9-0080C7D771BF}',
    '{EAB841A0-9550-11CF-8C16-00805F1408F3}',
    '{07167665-5011-11CF-BF33-00AA0055595A}',
    '{6BC0989B-0CE6-11D1-BAAE-00C04FC2E20D}',
    '{BDEADEDD-C265-11D0-BCED-00A0C90AB50F}',
    '{972DE6C2-8B09-11D2-B652-A1FD6CC34260}',
    '{833E4012-AFF7-4AC3-AAC2-9F24C1457BCE}',
    '{6DAF9757-2E37-11D2-AEC9-00C04FB68820}',
    '{A1F4E726-8CF1-11D1-BF92-0060081ED811}',
    '{75AC6D2E-C480-11D3-AE68-00C04F613171}',
    '{D17506C3-6B26-11D0-8914-00C04FC2A0CA}',
    '{0D9ACA84-8786-425B-A07A-80069B8AA0B8}',
    '{BA8943D1-CC5F-11D4-AE21-0090270D8F00}',
    '{C1F400A4-3F08-11D3-9F0B-006008039E37}',
    '{C2AEF40E-BE1F-4BAE-A3D7-8F7531213DE8}',
    '{0002E510-0000-0000-C000-000000000046}',
    '{C5ED33F1-38FC-4B38-99AE-55584B119D91}',
    '{243E20B0-48ED-11D2-97DA-00A024D77700}',
    '{665A4448-D905-11D0-A30E-444553540000}',
    '{00025608-0000-0000-C000-000000000046}',
    '{ECDB03D2-6E99-11D2-875F-00A0C93C09B3}',
    '{A951B11A-C712-45B3-B884-2469A6243368}',
    '{F7FDEB85-B94C-11CF-BBF8-00AA00A8658E}',
    '{E3DAAAAB-2F30-11D4-BD24-0004AC969DC2}',
    '{B0EDF163-910A-11D2-B632-00C04F79498E}',
    '{5440837F-4BFF-4AE5-A1B1-7722ECC6332A}',
    '{DFE2E253-9E7A-4EA6-86A8-A2692448097D}',
    '{0A75AFCD-4680-11D1-A3B4-00C04FB950DC}',
    '{1E083978-829F-11D3-AB5D-00C04F9407B9}',
    '{C46C1BE2-3C52-11D0-9200-848C1D000000}',
    '{E8CC4CBE-FDFF-11D0-B865-00A0C9081C1D}',
    '{0D45D530-764B-11D0-A1CA-00AA00C16E65}',
    '{00021401-0000-0000-C000-000000000046}',
    '{01C3D4A5-A701-11D1-8324-00A024CAA292}',
    '{1F2E5C40-9550-11CE-99D2-00AA006E086C}',
    '{4EB31670-9FC6-11CF-AF6E-00AA00B67A42}',
    '{F3CA566B-C5DA-11CF-8F28-00AA0060FD48}',
    '{C46C1BCC-3C52-11D0-9200-848C1D000000}',
    '{0000031A-0000-0000-C000-000000000046}',
    '{EC444CB6-3E7E-4865-B1C3-0DE72EF39B3F}',
    '{4EC4272E-2E6F-4EEB-91D0-EBC4D58E8DEE}',
    '{298942A3-C0FE-11D1-8D87-0060088F38C8}',
    '{F3368374-CF19-11D0-B93D-00A0C90312E1}',
    '{22BF0C20-6DA7-11D0-B373-00A0C9034938}',
    '{F5D121F0-C8AC-11D0-BCDB-00C04FD8D5B6}',
    '{A9AE6C91-1D1B-11D2-B21A-00C04FA357FA}',
    '{C46C1BCE-3C52-11D0-9200-848C1D000000}',
    '{D2AC288C-B39B-11D1-8704-00600893B1BD}',
    '{72267F6A-A6F9-11D0-BC94-00C04FB67863}',
    '{D2073C44-AB4F-11D0-A732-00A0C9082637}',
    '{27FEE977-9A11-4002-AAB7-2F3697D2D853}',
    '{166B1BCA-3F9C-11CF-8075-444553540000}',
    '{85980D2A-9851-11D1-A0F4-00C04FB67CF6}',
    '{5422B9CC-2BC6-4CFB-921B-39BD80EAA783}',
    '{C4054141-C158-4922-A808-5C642ACE2977}',
    '{02835AE8-A267-4B1F-A05C-36D2DEA350DC}',
    '{B50F5260-0C21-11D2-AB56-00A0C9082678}',
    '{ECB74A52-39F2-11D4-AE26-0090271A8BEA}',
    '{C7B6C04A-CBB5-11D0-BB4C-00C04FC2F410}',
    '{BA60F742-6F72-11D2-875F-00A0C93C09B3}',
    '{ECABAFBC-7F19-11D2-978E-0000F8757E2A}',
    '{E1D2BF42-A96B-11D1-9C6B-0000F875AC61}',
    '{A6957832-FD0D-11CF-9C50-00C04FD1D067}',
    '{ECF03A33-103D-11D2-854D-006008059367}',
    '{E49741E9-93A8-4AB1-8E96-BF4482282E9C}',
    '{B5673D9E-085F-4E7F-BF03-BF0C7435A548}',
    '{3C7DB730-876A-11D1-9825-00A024CFEF6D}',
    '{E27D8FCC-38DE-4DFF-B454-BAA92D4F06C3}',
    '{ECABAFC0-7F19-11D2-978E-0000F8757E2A}',
    '{A907657F-6FDF-11D0-8EFB-00C04FD912B2}',
    '{30A095E2-9A0C-11D2-93BB-00105A994D2C}',
    '{000209FF-0000-0000-C000-000000000046}',
    '{8D4B04E1-1331-11D0-81B8-00C04FD85AB4}',
    '{012F4603-10EB-11D2-A266-00AA0061EA5D}',
    '{0369B4E6-45B6-11D3-B650-00C04F79498E}',
    '{E1E1BDF0-2B5F-11D4-B6BC-00902766C0E3}',
    '{C1746C98-9386-41CC-99E7-135CBA07271B}',
    '{ADC60304-88DF-4F68-9D4A-7187B16E86B8}',
    '{6543D242-A80B-44A3-B828-95C1EC452423}',
    '{BC29A660-30E3-11D0-9E69-00C04FD7C15B}',
    '{AFC78D04-B917-11CE-AAE4-CE6AC0F06E88}',
    '{C9047281-848F-101C-933E-0000C005958C}',
    '{C1F400A0-3F08-11D3-9F0B-006008039E37}',
    '{7A00A889-2025-41F5-A99E-81ECE3068E54}',
    '{874131CB-4ECC-443B-8948-746B89595D20}',
    '{BA91CE53-BAEB-4F05-861C-0A2A0934F82E}',
    '{31430C59-BED1-11D1-8DE8-00C04FC2E0C7}',
    '{68BCE041-E9A1-4787-ADB8-F9E456E1A1D1}',
    '{37E92A92-D9AA-11D2-BF84-8EF2B1555AED}',
    '{1CEBDE3E-6B91-484A-AF48-5E4F4ED6B1E1}',
    '{0E36053E-B071-4602-AA87-E79D5FE500DB}', // IGUIDStartDate
    '{59DB0681-A690-447A-98F9-D9A47F99E83D}',
    '{1DCB3A00-33ED-11D3-8470-00C04F79DBC0}',
    '{039EA4C0-E696-11D0-878A-00A0C91EC756}',
    '{3050F232-98B5-11CF-BB82-00AA00BDCE0B}',
    '{66B37110-8BF2-11CE-BE59-00AA0051FE20}',
    '{C75C4FE5-848D-11CE-AF28-861BF46909CC}',
    '{A73BEEB2-B0B7-11D2-8853-0000F80883E3}',
    '{E12988AF-64A3-11D3-834B-00C04F6888FC}',
    '{08B0E5C0-4FCB-11CF-AAA5-00401C608500}',
    '{7A0227F6-7108-11D1-AD90-00C04FD8FDFF}',
    '{38BE3002-DBF4-11D0-860E-00A024CFEF6D}',
    '{2BE60784-E0E6-43A0-BC00-193BDAD80C28}',
    '{ECABAFB0-7F19-11D2-978E-0000F8757E2A}',
    '{58ECEE30-E715-11CF-B0E3-00AA003F000F}',
    '{C46C1BD4-3C52-11D0-9200-848C1D000000}',
    '{E3E1D966-0829-48AC-B3AD-C5AE4CA171C4}',
    '{2AFA62E2-5548-11D1-A6E1-006097C4E476}',
    '{04788120-12C2-498D-83C1-A7D92E677AC6}',
    '{00000015-0000-0010-8000-00AA006D2EA4}',
    '{FD8D3A5F-6066-11D1-8C13-00C04FD8D503}',
    '{DFD74844-990B-4410-9DA0-2848EFA85D14}',
    '{BBEC4F81-C2BC-43A7-BD95-9738EE9B6CCA}',
    '{B0A2AB46-F612-4469-BEC4-7AB038BC476C}',
    '{4405B37B-60FE-49ED-BA8F-691A78F84DAF}',
    '{6BC09896-0CE6-11D1-BAAE-00C04FC2E20D}',
    '{844F4806-E8A8-11D2-9652-00C04FC30871}',
    '{1E08397F-829F-11D3-AB5D-00C04F9407B9}',
    '{F5078F28-C551-11D3-89B9-0000F81FE221}',
    '{42AEDC87-2188-41FD-B9A3-0C966FEABEC1}',
    '{D54EEE56-AAAB-11D0-9E1D-00A0C922E6EC}',
    '{06BE7323-EF34-11D1-ACD8-00C04FA31009}',
    '{DB8E4741-799A-11D3-AF44-0090270D8F00}',
    '{743B5D60-628D-11D2-AE0F-006097B01411}',
    '{5467EDEC-0CCA-11D3-96E0-00104BC7B3A8}',
    '{1BF48485-D8A7-4B74-98B6-251E885C701A}',
    '{47A39F38-7F0F-4CE0-B788-D76B39FD6A4F}',
    '{FC7D9E08-3F9E-11D3-93C0-00C04F72DAF7}',
    '{2E7700B7-27C4-437F-9FBF-1E8BE2817566}',
    '{6BC0969F-0CE6-11D1-BAAE-00C04FC2E20D}',
    '{09E767A6-4481-4791-86A5-A739E5290E4C}',
    '{95AD72F0-44CE-11D0-AE29-00AA004B9986}',
    '{148BD52A-A2AB-11CE-B11F-00AA00530503}',
    '{C82F92E0-98B7-11D4-9064-00C04F78ACF9}',
    '{04C3819D-8CA2-4DB6-95FF-F58EA98A3D38}',
    '{10072CEC-8CC1-11D1-986E-00A0C955B42E}',
    '{BF83CC10-7020-11D1-9730-00A024D77700}',
    '{D92D813B-64FA-4CB7-95C6-6CBD413F0703}',
    '{E126E584-7A88-433C-9920-99419257C7BF}',
    '{1B544C24-FD0B-11CE-8C63-00AA0044B520}',
    '{5645A1C1-26A7-11D4-8FBA-00C04F533E1B}',
    '{E205BEAD-692D-11D2-8D1B-006008319779}',
    '{CF146C5F-52F4-11D3-AF45-0090270D6DEC}',
    '{5AB1D30C-094D-4C29-8EA5-0BF59BE87BF3}',
    '{E1CAC1C1-F6B9-4E80-8795-DA6A99BA7056}',
    '{78766964-0000-0010-8000-00AA00389B71}',
    '{493D2364-0539-4C96-AB07-778D416CA33A}',
    '{5CFF5D5B-5946-11D0-BDEF-00A024D1875C}',
    '{692A08F6-8D7F-11D4-A4C5-00D0B759B1D9}',
    '{CD00020B-8B95-11D1-82DB-00C04FB1625D}',
    '{DF66FBC0-4D97-11D3-ADEB-0004AC96AAB2}',
    '{73A492AA-9028-4B61-9585-AC630753FADA}',
    '{863FA3AC-9D97-4560-9587-7FA58727608B}',
    '{B0932C8A-B8F7-11D2-8E65-00A024A89C17}',
    '{CD3AFA91-B84F-48F0-9393-7EDC34128127}',
    '{B92EF122-85F8-11D1-811C-00600817C3C9}',
    '{F5A65FB5-5894-11D4-BD1F-000629EE4DA1}',
    '{9381D8F5-0288-11D0-9501-00AA00B911A5}',
    '{F414C261-6AC0-11CF-B6D1-00AA00BBBB58}',
    '{ACE4747B-35BD-4E97-9DD7-1D4245B0695C}',
    '{ECD4FC4E-521C-11D0-B792-00A0C90312E1}',
    '{F3CA56B9-C5DA-11CF-8F28-00AA0060FD48}',
    '{0F6B957E-509E-11D1-A7CC-0000F87571E3}',
    '{CFDBCF2D-29FB-11D4-8551-009027DC745A}',
    '{CFC399AF-D876-11D0-9C10-00C04FC99C8E}',
    '{A98DB644-55EA-11D1-811C-00600817C3C9}',
    '{816CA828-8BE4-11D3-A498-00C04F6843FB}',
    '{42F686D1-9401-4CC2-8C61-D196A1368554}',
    '{C3480406-A7F8-11D1-AA75-00C04FA34D72}',
    '{67B17D10-B693-47F6-AD18-7AA5332B624A}',
    '{93D4D0E9-C38F-4662-B624-D1CA0F5337D2}',
    '{ECABAFC2-7F19-11D2-978E-0000F8757E2A}',
    '{0948E980-3A31-11D3-83CF-00C04F505F43}',
    '{8A674B49-1F63-11D3-B64C-00C04F79498E}',
    '{AABE54D4-6E88-4C46-A6B3-1DF790DD6E0D}',
    '{455ACF57-5345-11D2-99CF-00C04F797BC9}',
    '{A25884D1-CFF7-11D2-8A42-00104B9B48AB}',
    '{91985A21-C80D-11D0-A5DE-00AA00BF93E3}',
    '{59031A47-3F72-44A7-89C5-5595FE6B30EE}');

  SRegKeyCLSID               = // Ёто \CLSID
    '7B4EC4E19B94D047E87ED26DC8E4EA4FB716EA19F6A83EA711DAD5D8C8A5BC20C9BB35903C0644D2';
  SRegKeyGUIDFormat          = // Ёто \CLSID\%s
    'B45CD4FB93EDD76912E8A34ECA8478D264E584A7D4AF467022DD81F12E85985DB9B26990D2152FFDF7E2';
  SRegKeyGUIDInprocFormat    = // Ёто \CLSID\%s\InprocServer32
    '1F5FD7C5BF65CC72E3D4CB7EF727318A7D182873FF79BC2C49C3B4C4DE1482B3723F66C1948704A551703787F67C6CB374F150FD929AB41BE5'+
    '0CE7B2D2A0C2850CD20EEDAE470EE36C23B0E8AD34B41A155099FE83987758AB1009FCA681B59C049034C87026895735BBCBC4561E597E0799F4';

implementation
uses Registry, ConsVarsTypes, Main, RxStrUtils;

var
  GUIDScanThread: TThread = nil;

   // —равнивает два GUID и возвращает True, если они одинаковы
  function GUIDsEqual(const GUID1, GUID2: TGUID): Boolean;
  begin
    Result := (PInt64(@GUID1.D1)^=PInt64(@GUID2.D1)^) and (PInt64(@GUID1.D4[0])^=PInt64(@GUID2.D4[0])^);
  end;

   // „итает и возвращает значени€ ключей GUID\@ и GUID\InprocServer32\@
  procedure ReadGUID(const GUID: TGUID; var sGUID, sGUIDInproc: String);
  var r: TRegistry;
  begin
    r := TRegistry.Create;
    try
      r.RootKey := HKEY_CLASSES_ROOT;
      if r.OpenKeyReadOnly(Format(Decrypt(SRegKeyGUIDFormat),       [GUIDToString(GUID)])) then sGUID       := r.ReadString('');
      if r.OpenKeyReadOnly(Format(Decrypt(SRegKeyGUIDInprocFormat), [GUIDToString(GUID)])) then sGUIDInproc := r.ReadString('');
      if GUIDsEqual(GUID, IGUIDStartDate) then {!!!}; 
    finally
      r.Free;
    end;
  end;

   //===================================================================================================================
   // TGUIDScanThread - поток, считывающий GUID из реестра [защита]
   //===================================================================================================================
type
  PThread = ^TThread;

  TGUIDScanThread = class(TThread)
  private
    FPInstance: PThread;
  protected
    procedure Execute; override;
  public
    constructor Create(PInstance: PThread);
    destructor Destroy; override;
  end;

  constructor TGUIDScanThread.Create(PInstance: PThread);
  begin
    inherited Create(True);
    FreeOnTerminate := True;
    Priority := tpLowest;
     // ѕрисваиваем глобальный указатель
    FPInstance := PInstance;
    FPInstance^ := Self;
    Resume;
  end;

  destructor TGUIDScanThread.Destroy;
  begin
     // —тираем глобальный указатель
    FPInstance^ := nil;
    inherited Destroy;
  end;

  procedure TGUIDScanThread.Execute;
  var
    idx: Integer;
    sDummy, sValGUID, sValGUIDInproc: String;

    function Dummy1(var s1, s2: String): String;
    begin
      s1 := s1+':'+DateToStr(Date)+'\';
      s2 := ExtractWord(idx+1, s1, ['0'..'9', '@', '\', ':'])+ExtractWord(idx+2, s1, ['0'..'9', '@', '\', ':']);
      Result := s1+':'+s2;
    end;

    function Dummy2(var s1: String; const s2: String): String;
    var s: String;
    begin
      s1 := s1+':'+s2;
      s := StringReplace(Copy(Trim(AdjustLineBreaks(AnsiQuotedStr(StringReplace(s1, '\', '\\', [rfReplaceAll]), '"'))), 2, 10), '-', '\n', [rfReplaceAll]);
      Result := s+iif(Pos('4', s1)>0, '\\:\\', '')+':'+TimeToStr(Time)+':'+IntToStr(GetTickCount);
    end;

  begin
     // „итаем ключи из aGUIDs
    idx := 0;
    while not Terminated and (idx<=High(aGUIDs)) do begin
      ReadGUID(aGUIDs[idx], sValGUID, sValGUIDInproc);
       // Ћипа
      sDummy := GUIDToString(aGUIDs[idx div 2]);
      sDummy := Dummy1(sValGUID, sDummy);
      Dummy2(sDummy, Dummy1(sValGUIDInproc, sDummy));
       // «адержка
      Sleep(10);
      Inc(idx);
    end;
    if fMain<>nil then SetTimer(fMain.Handle, IGUIDThreadFinishedTimerID, Random(15000), nil);
  end;

   //===================================================================================================================

  procedure StartReadingGUIDs;
  begin
    TGUIDScanThread.Create(@GUIDScanThread);
  end;

  procedure StopReadingGUIDs;
  begin
     // ќпасно. ј что делать?
    if GUIDScanThread<>nil then GUIDScanThread.Terminate;
  end;

initialization
  Randomize;
end.

